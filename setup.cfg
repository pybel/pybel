##########################
# Setup.py Configuration #
##########################
[metadata]
name = pybel
version = 0.14.11-dev
description = Parsing, validation, compilation, and data exchange of Biological Expression Language (BEL)
long_description = file: README.rst

# URLs associated with the project
url = https://github.com/pybel/pybel
download_url = https://github.com/pybel/pybel/releases
project_urls =
    Bug Tracker = https://github.com/pybel/pybel/issues
    Source Code = https://github.com/pybel/pybel
    Documentation = https://pybel.readthedocs.io

# Author information
author = Charles Tapley Hoyt
author_email = cthoyt@gmail.com
maintainer = Charles Tapley Hoyt
maintainer_email = cthoyt@gmail.com

# License Information
license = MIT
license_file = LICENSE

# Search tags
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Chemistry
keywords =
    Biological Expression Language
    BEL
    Domain Specific Language
    DSL
    Systems Biology
    Networks Biology

[options]
install_requires =
    networkx>=2.4
    sqlalchemy
    click
    click-plugins
    bel_resources>=0.0.3
    more_itertools
    requests
    requests_file
    pyparsing
    tqdm
    humanize
    tabulate
    pandas
    jsonschema

# Random options
zip_safe = false
include_package_data = True
python_requires = >=3.6

# Where is my code
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
indra =
    indra
jupyter =
    jinja2
    ipython
grounding =
    pyobo
neo4j =
    py2neo
docs =
    sphinx
    sphinx-rtd-theme
    sphinx-click
    sphinx-autodoc-typehints

[options.entry_points]
console_scripts =
    pybel = pybel.cli:main
pybel.importer =
    bel                   = pybel.io.lines:from_bel_script
    bel.gz                = pybel.io.lines:from_bel_script_gz
    bel.nodelink.json     = pybel.io.nodelink:from_nodelink_file
    bel.nodelink.json.gz  = pybel.io.nodelink:from_nodelink_gz
    bel.jsonl             = pybel.io.sbel:from_sbel_file
    bel.jsonl.gz          = pybel.io.sbel:from_sbel_gz
    bel.cx.json           = pybel.io.cx:from_cx_file
    bel.cx.json.gz        = pybel.io.cx:from_cx_gz
    bel.graphdati.json    = pybel.io.graphdati:from_graphdati_file
    bel.graphdati.json.gz = pybel.io.graphdati:from_graphdati_gz
    bel.jgif.json         = pybel.io.jgif:from_jgif_file
    bel.jgif.json.gz      = pybel.io.jgif:from_jgif_gz
    bel.pickle            = pybel.io.gpickle:from_pickle
    bel.gpickle           = pybel.io.gpickle:from_pickle
    bel.pkl               = pybel.io.gpickle:from_pickle
    indra.json            = pybel.io.indra:from_indra_statements_json_file

pybel.exporter =
    bel                   = pybel.canonicalize:to_bel_script
    bel.gz                = pybel.canonicalize:to_bel_script_gz
    bel.nodelink.json     = pybel.io.nodelink:to_nodelink_file
    bel.nodelink.json.gz  = pybel.io.nodelink:to_nodelink_gz
    bel.jsonl             = pybel.io.sbel:to_sbel_file
    bel.jsonl.gz          = pybel.io.sbel:to_sbel_gz
    bel.cx.json           = pybel.io.cx:to_cx_file
    bel.cx.json.gz        = pybel.io.cx:to_cx_gz
    bel.graphdati.json    = pybel.io.graphdati:to_graphdati_file
    bel.graphdati.json.gz = pybel.io.graphdati:to_graphdati_gz
    bel.jgif.json         = pybel.io.jgif:to_jgif_file
    bel.jgif.json.gz      = pybel.io.jgif:to_jgif_gz
    bel.pickle            = pybel.io.gpickle:to_pickle
    bel.gpickle           = pybel.io.gpickle:to_pickle
    bel.pkl               = pybel.io.gpickle:to_pickle
    indra.json            = pybel.io.indra:to_indra_statements_json_file
    # No re-import
    bel.unodelink.json    = pybel.io.umbrella_nodelink:to_umbrella_nodelink_file
    bel.unodelink.json.gz = pybel.io.umbrella_nodelink:to_umbrella_nodelink_gz
    tsv                   = pybel.io.triples.api:to_triples_file
    gsea                  = pybel.io.extras:to_gsea

# Importers for PyKEEN
pykeen.triples.extension_importer =
    # Import BEL script to PyKEEN
    bel               = pybel.io.pykeen:get_triples_from_bel
    # Import BEL Graph pickle to PyKEEN
    bel.gpickle       = pybel.io.pykeen:get_triples_from_bel_pickle
    bel.pickle        = pybel.io.pykeen:get_triples_from_bel_pickle
    bel.pkl           = pybel.io.pykeen:get_triples_from_bel_pickle
    # Import BEL NodeLink JSON to PyKEEN
    bel.nodelink.json = pybel.io.pykeen:get_triples_from_bel_nodelink
pykeen.triples.prefix_importer =
    # Import BEL from BEL Commons to PyKEEN
    bel-commons       = pybel.io.pykeen:get_triples_from_bel_commons

######################
# Doc8 Configuration #
# (doc8.ini)         #
######################
[doc8]
max-line-length = 120

##########################
# Coverage Configuration #
# (.coveragerc)          #
##########################
[coverage:run]
branch = True
source = pybel
omit =
    src/pybel/__main__.py
    src/pybel/cli.py
    src/pybel/io/indra.py
    src/pybel/io/web.py
    tests/*
    docs/*
    scripts/*

[coverage:paths]
source =
    src/pybel
    .tox/*/lib/python*/site-packages/pybel

[coverage:report]
show_missing = True
exclude_lines =
    def __str__
    def __repr__
